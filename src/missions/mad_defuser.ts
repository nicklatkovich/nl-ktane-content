import { MissionInfo } from "nl-ktane-lib";

export const mad_defuser: MissionInfo = {
  name: "Mad Defuser",
  missionPack: "Espik's Harder Missions",
  time: 85 * 60,
  strikes: 5,
  widgets: 7,
  completions: [
    {
      time: 4 * 60 + 45,
      isFirst: true,
      vid: "https://www.youtube.com/watch?v=SVjx9sUqVH4",
      completers: { defuser: "Bianca", experts: ["Benjamin", "Megum"] },
    },
    { time: 4 * 60 + 43, log: "file=0eae991c2b876769f15e799eb0c1e339a59ffa44;bomb=GK4PU2", completer: "ManiaMate" },
  ],
  modules: [
    "spwiz3DMaze",
    "algebra",
    "ksmBadugi",
    "BartendingModule",
    "BigCircle",
    "BinaryLeds",
    "BlackHoleModule",
    "TheBulbModule",
    "ChordQualities",
    "ColoredButtons",
    "ColoredSwitchesModule",
    "ColorMorseModule",
    "commuting",
    "cruelCountdown",
    "crystalMaze",
    "cube",
    "DACH",
    "diffusion",
    "DiscoloredSquaresModule",
    "DoubleOhModule",
    "Emoji Math",
    "EncryptedDice",
    "europeanTravel",
    "factoryMaze",
    "fastMath",
    "FestivePianoKeys",
    "qkGnomishPuzzle",
    "GridlockModule",
    "increasingIndices",
    "langtonAnt",
    "masherTheBottun",
    "mastermindRestricted",
    "MentalMath",
    "necronomicon",
    "NotComplicatedWires",
    "OnlyConnectModule",
    "partialDerivatives",
    "PianoKeys",
    "pictionaryModule",
    "pixelcipher",
    "PointOfOrderModule",
    "PrimeChecker",
    "RailwayCargoLoading",
    "ksmRainbowArrows",
    "RegularHexpressions",
    "remotemath",
    "RockPaperScissorsLizardSpockModule",
    "rullo",
    "sixten",
    "SuperlogicModule",
    "tetrisSprint",
    "timezone",
    "TribalCouncil",
    "wastemanagement",
    "WirePlacementModule",
    "thewitness",
    [
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "MemoryV2",
      "forgetItNot",
    ],
  ],
};
